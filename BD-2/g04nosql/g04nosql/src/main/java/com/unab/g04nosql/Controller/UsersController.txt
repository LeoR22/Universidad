@CrossOrigin(origins = "*")
@RestController
@RequestMapping("api/users")
public class UsersController {

	@Autowired
	private IUsersService service;

	@GetMapping
	public List<Users> all() {
		return service.all(); // Retorna todos los usuarios
	}

	@GetMapping("{id}")
	public Optional<Users> show(@PathVariable String id) {
		return service.findById(id); // Busca un usuario por su ID
	}

	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	public Users save(@RequestBody Users person) {
		return service.save(person); // Guarda un nuevo usuario
	}

	@PutMapping("{id}")
	@ResponseStatus(code = HttpStatus.CREATED)
	public Users update(@PathVariable String id, @RequestBody Users users) {
		Optional<Users> op = service.findById(id);

		if (!op.isEmpty()) {
			Users usersUpdate = op.get();
			usersUpdate.setUsuario(users.getUsuario());
			usersUpdate.setContrasenia(users.getContrasenia());
			usersUpdate.setEstado(users.getEstado());
			return service.save(usersUpdate); // Guarda el usuario editado
		}

		return users;
	}

	@DeleteMapping("{id}")
	@ResponseStatus(code = HttpStatus.NO_CONTENT)
	public void delete(@PathVariable String id) {
		service.delete(id); // Elimina un usuario por ID
	}
}
